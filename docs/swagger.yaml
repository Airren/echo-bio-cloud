basePath: /api/v1/
definitions:
  model.AlgoParameter:
    properties:
      account_id:
        type: string
      algorithmId:
        type: integer
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      description:
        type: string
      id:
        type: integer
      label:
        type: string
      name:
        type: string
      org:
        type: string
      required:
        type: boolean
      type:
        $ref: '#/definitions/model.ParamType'
      updated_at:
        type: string
      updated_by:
        type: string
      value_list:
        type: string
    type: object
  model.Algorithm:
    properties:
      account_id:
        type: string
      command:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      description:
        type: string
      document:
        type: string
      favourite:
        type: integer
      group_id:
        type: string
      id:
        type: integer
      image:
        type: string
      label:
        type: string
      name:
        type: string
      org:
        type: string
      parameters:
        items:
          $ref: '#/definitions/model.AlgoParameter'
        type: array
      price:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  model.File:
    properties:
      MD5:
        type: string
      URLPath:
        type: string
      account_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      org:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  model.Job:
    properties:
      account_id:
        type: string
      algorithm:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      id:
        type: integer
      inputFile:
        type: string
      org:
        type: string
      outPutFile:
        type: string
      parameter:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  model.ParamType:
    enum:
    - string
    - file
    - radio
    - select
    type: string
    x-enum-varnames:
    - ParamString
    - ParamFile
    - ParamRadio
    - ParamSelect
  req.AlgorithmReq:
    properties:
      asc:
        type: boolean
      command:
        type: string
      description:
        type: string
      document:
        type: string
      favourite:
        type: integer
      group:
        type: string
      image:
        type: string
      label:
        type: string
      name:
        type: string
      order_by:
        type: string
      page:
        example: 1
        type: integer
      page_size:
        example: 10
        type: integer
      parameters:
        items:
          $ref: '#/definitions/model.AlgoParameter'
        type: array
      price:
        type: integer
      total:
        type: integer
    type: object
  req.ListFileByIdsReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  vo.BaseVO:
    properties:
      asc:
        type: boolean
      data: {}
      error_code:
        type: integer
      error_message:
        type: string
      order_by:
        type: string
      page:
        example: 1
        type: integer
      page_size:
        example: 10
        type: integer
      success:
        type: boolean
      total:
        type: integer
    type: object
  vo.FileVO:
    properties:
      URLPath:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
host: http://echo-bio.cn
info:
  contact:
    email: renqiqiang@outlook.com, peto1
    name: Airren, Peto
  description: Order Manager
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Echo-Bio-Cloud
  version: 0.0.1
paths:
  /file/download/{id}:
    post:
      consumes:
      - application/json
      description: Download by file ID
      parameters:
      - description: FILE ID
        format: octet-stream
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vo.BaseVO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/vo.BaseVO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/vo.BaseVO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/vo.BaseVO'
      summary: Download a file
      tags:
      - file
  /file/list:
    get:
      consumes:
      - application/json
      description: List files by user id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.File'
            type: array
      summary: List files
      tags:
      - file
  /file/listByIds:
    get:
      consumes:
      - application/json
      description: List files by file ids
      parameters:
      - description: FILE ID LIST
        in: body
        name: ids
        required: true
        schema:
          $ref: '#/definitions/req.ListFileByIdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.File'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/vo.BaseVO'
      summary: List files
      tags:
      - file
  /file/update/:
    put:
      consumes:
      - application/json
      description: Upload a file
      parameters:
      - description: FILE
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vo.FileVO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/vo.BaseVO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/vo.BaseVO'
      summary: Upload a file
      tags:
      - file
  /task/{id}:
    get:
      consumes:
      - application/json
      description: Get details of task by id
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Algorithm'
      summary: get task by id
      tags:
      - Algorithm
  /task/create_by_file:
    post:
      consumes:
      - application/json
      description: create task
      parameters:
      - description: task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Algorithm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Algorithm'
      summary: create task
      tags:
      - Algorithm
  /task/list:
    post:
      consumes:
      - application/json
      description: query task
      parameters:
      - description: task req
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/req.AlgorithmReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Algorithm'
            type: array
      summary: query task
      tags:
      - Algorithm
  /task/update:
    put:
      consumes:
      - application/json
      description: update task
      parameters:
      - description: task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Job'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: update task
      tags:
      - Job
swagger: "2.0"
